package com.nt.ApexonLogical;

/*
Given an array of integers and a sum K,
return the length of the shortest sub-array which matches the given sum. If it doesn't exist, return -1.
[Even a single integer can be considered as a sum.]

Examples:
int[] arr = {2, 4, 6, 10, 2, 1}, K = 12        // Return 2

int[] arr = {5, 8, 50, 4}, K = 50                // Return 50 (A single integer may be considered as a sum)
*/
public class SubArrayOfTwoSum {

	public static void main(String[] args) {
		
		int[] arr = {2,4,6,10, 2, 1};
		int k = 12;
		
		findSubArrayOfSum(arr, k);
		
	}
	
	public static void findSubArrayOfSum(int[] arr, int k) {
		int maxLength = Integer.MAX_VALUE;
		
		for(int i=0; i<arr.length; i++) {
			
			int sum = 0;
			
		}
	}
}
